const TestData = {

    graphvizColors: {
        a: {
            line: '#123752',
            fill: '#708EA4',
            text: '#eeeeee'
        },
        b: {
            line: '#AA8E39',
            fill: '#FFEAAA',
            text: '#806515',
            inversedText: '#FFEAAA'
        },
        c: {
            line: '#306E12',
            fill: "#519331",
            text: "#ABDD93"
        }
    },

    graphPresentation: {
        slides: [
            {
                ids: ['main', 'parse', 'main->parse'], "content": [
                {
                    "type": "Paragraph",
                    "content": [
                        {
                            "text": "hello",
                            "type": "SimpleText",
                            "content": []
                        }
                    ]
                }
            ]
            },
            {
                ids: ['listen'], "content": [
                {
                    "type": "Paragraph",
                    "content": [
                        {
                            "text": "hello world",
                            "type": "SimpleText",
                            "content": []
                        }
                    ]
                }
            ]
            }
        ]
    },

    svg: '<?xml version="1.0" encoding="UTF-8" standalone="no"?> <!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"  "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"> <!-- Generated by graphviz version 2.38.0 (20140413.2041)  --> <!-- Title: Simple Pages: 1 --> <svg width="188pt" height="191pt"  viewBox="0.00 0.00 188.00 191.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"> <g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 187)"> <title>Simple</title> <polygon fill="white" stroke="none" points="-4,4 -4,-187 184,-187 184,4 -4,4"/> <!-- main --> <g id="node1" class="node"><title>main</title> <polygon fill="none" stroke="black" points="63,-146.5 63,-182.5 117,-182.5 117,-146.5 63,-146.5"/> <text text-anchor="middle" x="89.9966" y="-160.3" font-family="Times,serif" font-size="14.00">main [a]</text> </g> <!-- parse --> <g id="node2" class="node"><title>parse</title> <polygon fill="none" stroke="black" points="63,-73.5 63,-109.5 117,-109.5 117,-73.5 63,-73.5"/> <text text-anchor="middle" x="89.769" y="-87.3" font-family="Times,serif" font-size="14.00">parse</text> </g> <!-- main&#45;&gt;parse --> <g id="edge1" class="edge"><title>main&#45;&gt;parse</title> <path fill="none" stroke="black" d="M90,-146.455C90,-146.455 90,-119.59 90,-119.59"/> <polygon fill="black" stroke="black" points="93.5001,-119.59 90,-109.59 86.5001,-119.59 93.5001,-119.59"/> </g> <!-- listen --> <g id="node3" class="node"><title>listen</title> <polygon fill="none" stroke="black" points="0,-0.5 0,-36.5 54,-36.5 54,-0.5 0,-0.5"/> <text text-anchor="middle" x="26.6655" y="-14.3" font-family="Times,serif" font-size="14.00">listen</text> </g> <!-- parse&#45;&gt;listen --> <g id="edge2" class="edge"><title>parse&#45;&gt;listen</title> <path fill="none" stroke="black" d="M81,-73.4602C81,-50.0044 81,-12 81,-12 81,-12 64.3164,-12 64.3164,-12"/> <polygon fill="black" stroke="black" points="64.3164,-8.5001 54.3164,-12 64.3164,-15.5001 64.3164,-8.5001"/> </g> <!-- server --> <g id="node4" class="node"><title>server</title> <polygon fill="none" stroke="black" points="126,-0.5 126,-36.5 180,-36.5 180,-0.5 126,-0.5"/> <text text-anchor="middle" x="152.6" y="-14.3" font-family="Times,serif" font-size="14.00">server</text> </g> <!-- parse&#45;&gt;server --> <g id="edge3" class="edge"><title>parse&#45;&gt;server</title> <path fill="none" stroke="black" d="M99,-73.4112C99,-53.4169 99,-24 99,-24 99,-24 115.684,-24 115.684,-24"/> <polygon fill="black" stroke="black" points="115.684,-27.5001 125.684,-24 115.684,-20.5001 115.684,-27.5001"/> </g> </g> </svg> ',

    documentation: {
        "docMeta": {
            "id": "",
            "type": "User Guide",
            "title": "MDoc",
            "previewEnabled": true
        },
        "page": {
            "type": "Page",
            "content": [
                {
                    "title": "Auto Highlight",
                    "id": "auto-highlight",
                    "type": "Section",
                    "content": [
                        {
                            "type": "Paragraph",
                            "content": [
                                {
                                    "text": "It is very easy to add a code snippet with an automatic code highlighting.",
                                    "type": "SimpleText"
                                },
                                {
                                    "type": "SoftLineBreak"
                                },
                                {
                                    "text": "All you have to do is indent your code with 4 spaces inside your markdown document and",
                                    "type": "SimpleText"
                                },
                                {
                                    "type": "SoftLineBreak"
                                },
                                {
                                    "text": "you code will be auto highlighted.",
                                    "type": "SimpleText"
                                }
                            ]
                        },
                        {
                            "lang": "",
                            "maxLineLength": 52,
                            "tokens": [
                                {
                                    "type": "text",
                                    "data": "interface PriceService {\n    Money calcPrice(String cuips, Integer quantity);\n}\n"
                                }
                            ],
                            "lineNumber": "",
                            "type": "Snippet"
                        },
                        {
                            "type": "Paragraph",
                            "content": [
                                {
                                    "text": "This method attempts to guess the language and highlight accordingly. Markdown used to create code snippet above follows",
                                    "type": "SimpleText"
                                }
                            ]
                        },
                        {
                            "componentName": "Snippet",
                            "componentProps": {
                                "lang": "markdown",
                                "maxLineLength": 87,
                                "tokens": [
                                    {
                                        "type": "title",
                                        "data": "# Auto Highlight"
                                    },
                                    {
                                        "type": "text",
                                        "data": "\n\nIt is very easy to add a code snippet with an automatic code highlighting.\nAll you have to do is indent your code with 4 spaces inside your markdown document and \nyou code will be auto highlighted.\n\n"
                                    },
                                    {
                                        "type": "code",
                                        "data": "    interface PriceService {"
                                    },
                                    {
                                        "type": "text",
                                        "data": "\n"
                                    },
                                    {
                                        "type": "code",
                                        "data": "        Money calcPrice(String cuips, Integer quantity);"
                                    },
                                    {
                                        "type": "text",
                                        "data": "\n"
                                    },
                                    {
                                        "type": "code",
                                        "data": "    }"
                                    }
                                ],
                                "startLine": "# Auto Highlight",
                                "numberOfLines": 9.0,
                                "title": "markdown"
                            },
                            "type": "CustomComponent"
                        },
                        {
                            "type": "Paragraph"
                        }
                    ]
                },
                {
                    "title": "Specifying Language",
                    "id": "specifying-language",
                    "type": "Section",
                    "content": [
                        {
                            "type": "Paragraph",
                            "content": [
                                {
                                    "text": "You can also specify a language.",
                                    "type": "SimpleText"
                                },
                                {
                                    "type": "SoftLineBreak"
                                },
                                {
                                    "text": "That maybe useful if there is the snippet is not large enough for auto detection.",
                                    "type": "SimpleText"
                                }
                            ]
                        },
                        {
                            "lang": "javascript",
                            "maxLineLength": 38,
                            "tokens": [
                                {
                                    "type": "keyword",
                                    "data": "import"
                                },
                                {
                                    "type": "text",
                                    "data": " React"
                                },
                                {
                                    "type": "punctuation",
                                    "data": ","
                                },
                                {
                                    "type": "text",
                                    "data": " "
                                },
                                {
                                    "type": "punctuation",
                                    "data": "{"
                                },
                                {
                                    "type": "text",
                                    "data": "Component"
                                },
                                {
                                    "type": "punctuation",
                                    "data": "}"
                                },
                                {
                                    "type": "text",
                                    "data": " "
                                },
                                {
                                    "type": "keyword",
                                    "data": "from"
                                },
                                {
                                    "type": "text",
                                    "data": " "
                                },
                                {
                                    "type": "string",
                                    "data": "\u0027"
                                },
                                {
                                    "type": "text",
                                    "data": "react"
                                },
                                {
                                    "type": "string",
                                    "data": "\u0027"
                                },
                                {
                                    "type": "text",
                                    "data": "\n\n"
                                },
                                {
                                    "type": "keyword",
                                    "data": "class"
                                },
                                {
                                    "type": "text",
                                    "data": " "
                                },
                                {
                                    "type": "class-name",
                                    "data": "MyComponent"
                                },
                                {
                                    "type": "text",
                                    "data": " "
                                },
                                {
                                    "type": "keyword",
                                    "data": "extends"
                                },
                                {
                                    "type": "text",
                                    "data": " "
                                },
                                {
                                    "type": "class-name",
                                    "data": "Component"
                                },
                                {
                                    "type": "text",
                                    "data": " "
                                },
                                {
                                    "type": "punctuation",
                                    "data": "{"
                                },
                                {
                                    "type": "text",
                                    "data": "\n    "
                                },
                                {
                                    "type": "function",
                                    "data": "render"
                                },
                                {
                                    "type": "punctuation",
                                    "data": "("
                                },
                                {
                                    "type": "punctuation",
                                    "data": ")"
                                },
                                {
                                    "type": "text",
                                    "data": " "
                                },
                                {
                                    "type": "punctuation",
                                    "data": "{"
                                },
                                {
                                    "type": "text",
                                    "data": "\n        "
                                },
                                {
                                    "type": "comment",
                                    "data": "/// ..."
                                },
                                {
                                    "type": "text",
                                    "data": "\n    "
                                },
                                {
                                    "type": "punctuation",
                                    "data": "}"
                                },
                                {
                                    "type": "text",
                                    "data": "\n"
                                },
                                {
                                    "type": "punctuation",
                                    "data": "}"
                                },
                                {
                                    "type": "text",
                                    "data": "\n"
                                }
                            ],
                            "lineNumber": "",
                            "type": "Snippet"
                        },
                        {
                            "type": "Paragraph",
                            "content": [
                                {
                                    "text": "Snippet below is used to highlight the code as a javascript language",
                                    "type": "SimpleText"
                                }
                            ]
                        },
                        {
                            "componentName": "Snippet",
                            "componentProps": {
                                "lang": "markdown",
                                "maxLineLength": 81,
                                "tokens": [
                                    {
                                        "type": "title",
                                        "data": "# Specifying Language"
                                    },
                                    {
                                        "type": "text",
                                        "data": "\n \nYou can also specify a language. \nThat maybe useful if there is the snippet is not large enough for auto detection.\n\n```javascript\nimport React, {Component} from \u0027react\u0027\n\nclass MyComponent extends Component {\n"
                                    },
                                    {
                                        "type": "code",
                                        "data": "    render() {"
                                    },
                                    {
                                        "type": "text",
                                        "data": "\n"
                                    },
                                    {
                                        "type": "code",
                                        "data": "        /// ..."
                                    },
                                    {
                                        "type": "text",
                                        "data": "\n"
                                    },
                                    {
                                        "type": "code",
                                        "data": "    }"
                                    },
                                    {
                                        "type": "text",
                                        "data": "\n}\n```"
                                    }
                                ],
                                "startLine": "# Specifying Language",
                                "numberOfLines": 14.0,
                                "title": "markdown"
                            },
                            "type": "CustomComponent"
                        },
                        {
                            "type": "Paragraph"
                        },
                        {
                            "type": "Paragraph",
                            "content": [
                                {
                                    "text": "Following languages are supported",
                                    "type": "SimpleText"
                                }
                            ]
                        },
                        {
                            "bulletMarker": "*",
                            "tight": true,
                            "type": "BulletList",
                            "content": [
                                {
                                    "type": "ListItem",
                                    "content": [
                                        {
                                            "type": "Paragraph",
                                            "content": [
                                                {
                                                    "text": "Java",
                                                    "type": "SimpleText"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "ListItem",
                                    "content": [
                                        {
                                            "type": "Paragraph",
                                            "content": [
                                                {
                                                    "text": "JavaScript",
                                                    "type": "SimpleText"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "ListItem",
                                    "content": [
                                        {
                                            "type": "Paragraph",
                                            "content": [
                                                {
                                                    "text": "Groovy",
                                                    "type": "SimpleText"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "ListItem",
                                    "content": [
                                        {
                                            "type": "Paragraph",
                                            "content": [
                                                {
                                                    "text": "Python",
                                                    "type": "SimpleText"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "Paragraph",
                            "content": [
                                {
                                    "text": "We use highlightjs library to provide syntax highlighting",
                                    "type": "SimpleText"
                                }
                            ]
                        }
                    ]
                },
                {
                    "title": "Wide Code",
                    "id": "wide-code",
                    "type": "Section",
                    "content": [
                        {
                            "type": "Paragraph",
                            "content": [
                                {
                                    "text": "To make regular text more readable we maintain a narrow column of text. You code snippets however can\u0027t always follow the",
                                    "type": "SimpleText"
                                },
                                {
                                    "type": "SoftLineBreak"
                                },
                                {
                                    "text": "same rules. In case of a wide code snippets we expand the horizontal boundaries and center the source code to fit.",
                                    "type": "SimpleText"
                                }
                            ]
                        },
                        {
                            "lang": "java",
                            "maxLineLength": 114,
                            "tokens": [
                                {
                                    "type": "keyword",
                                    "data": "class"
                                },
                                {
                                    "type": "text",
                                    "data": " "
                                },
                                {
                                    "type": "class-name",
                                    "data": "InternationalPriceService"
                                },
                                {
                                    "type": "text",
                                    "data": " "
                                },
                                {
                                    "type": "keyword",
                                    "data": "implements"
                                },
                                {
                                    "type": "text",
                                    "data": " "
                                },
                                {
                                    "type": "class-name",
                                    "data": "PriceService"
                                },
                                {
                                    "type": "text",
                                    "data": " "
                                },
                                {
                                    "type": "punctuation",
                                    "data": "{"
                                },
                                {
                                    "type": "text",
                                    "data": "\n    "
                                },
                                {
                                    "type": "keyword",
                                    "data": "private"
                                },
                                {
                                    "type": "text",
                                    "data": " "
                                },
                                {
                                    "type": "keyword",
                                    "data": "static"
                                },
                                {
                                    "type": "text",
                                    "data": " "
                                },
                                {
                                    "type": "keyword",
                                    "data": "void"
                                },
                                {
                                    "type": "text",
                                    "data": " LongJavaInterfaceNameWithSuperFactory "
                                },
                                {
                                    "type": "function",
                                    "data": "createMegaFactory"
                                },
                                {
                                    "type": "punctuation",
                                    "data": "("
                                },
                                {
                                    "type": "keyword",
                                    "data": "final"
                                },
                                {
                                    "type": "text",
                                    "data": " ExchangeCalendar calendar"
                                },
                                {
                                    "type": "punctuation",
                                    "data": ")"
                                },
                                {
                                    "type": "text",
                                    "data": " "
                                },
                                {
                                    "type": "punctuation",
                                    "data": "{"
                                },
                                {
                                    "type": "text",
                                    "data": "\n        "
                                },
                                {
                                    "type": "punctuation",
                                    "data": "."
                                },
                                {
                                    "type": "punctuation",
                                    "data": "."
                                },
                                {
                                    "type": "punctuation",
                                    "data": "."
                                },
                                {
                                    "type": "text",
                                    "data": "\n    "
                                },
                                {
                                    "type": "punctuation",
                                    "data": "}"
                                },
                                {
                                    "type": "text",
                                    "data": "\n"
                                },
                                {
                                    "type": "punctuation",
                                    "data": "}"
                                },
                                {
                                    "type": "text",
                                    "data": "\n"
                                }
                            ],
                            "lineNumber": "",
                            "type": "Snippet"
                        }
                    ]
                },
                {
                    "title": "Inlined",
                    "id": "inlined",
                    "type": "Section",
                    "content": [
                        {
                            "type": "Paragraph",
                            "content": [
                                {
                                    "text": "To inline code within a text dimply put it inside a back tick.",
                                    "type": "SimpleText"
                                },
                                {
                                    "type": "SoftLineBreak"
                                },
                                {
                                    "text": "E.g. To check if an Exchange is closed, you need to use ",
                                    "type": "SimpleText"
                                },
                                {
                                    "code": "ExchangeCalendar",
                                    "type": "InlinedCode"
                                }
                            ]
                        },
                        {
                            "componentName": "Snippet",
                            "componentProps": {
                                "lang": "markdown",
                                "maxLineLength": 74,
                                "tokens": [
                                    {
                                        "type": "title",
                                        "data": "# Inlined"
                                    },
                                    {
                                        "type": "text",
                                        "data": "\n\nTo inline code within a text dimply put it inside a back tick. \nE.g. To check if an Exchange is closed, you need to use "
                                    },
                                    {
                                        "type": "code",
                                        "data": "`ExchangeCalendar`"
                                    }
                                ],
                                "startLine": "# Inlined",
                                "numberOfLines": 4.0,
                                "title": "markdown"
                            },
                            "type": "CustomComponent"
                        },
                        {
                            "type": "Paragraph"
                        }
                    ]
                }
            ],
            "tocItem": {
                "sectionTitle": "Features",
                "pageTitle": "Code Snippets",
                "fileName": "code-snippets",
                "dirName": "features",
                "pageSectionIdTitles": [
                    {
                        "title": "Auto Highlight",
                        "id": "auto-highlight"
                    },
                    {
                        "title": "Specifying Language",
                        "id": "specifying-language"
                    },
                    {
                        "title": "Wide Code",
                        "id": "wide-code"
                    },
                    {
                        "title": "Inlined",
                        "id": "inlined"
                    }
                ]
            },
            "renderContext": {
                "nestLevel": 1
            }
        }
    }};

export default TestData;